import sqlite3
import logging
import asyncio
import datetime
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

TOKEN = "7934568684:AAHsKoficbDtOhA3oYjveRozQPoItFlqYRk"
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

class Registration(StatesGroup):
    enter_fa_username = State()

nav_keyboard = InlineKeyboardMarkup(inline_keyboard=[
])

@dp.message(Command("start"))
async def start(message: types.Message, state: FSMContext):
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute("SELECT fa_username FROM users WHERE telegram_id = ?", (message.from_user.id,))
    user = cursor.fetchone()
    
    if not user or not user[0]:
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–∏–∫ –Ω–∞ FurAffinity:", reply_markup=nav_keyboard)
        await state.set_state(Registration.enter_fa_username)
    else:
        await message.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /profile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º.", reply_markup=nav_keyboard)
    
    conn.close()

@dp.message(Registration.enter_fa_username)
async def enter_fa_username(message: types.Message, state: FSMContext):
    fa_username = message.text.strip()
    fa_link = f"https://www.furaffinity.net/user/{fa_username}"
    
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute(
        "INSERT INTO users (telegram_id, username, fa_username, fa_link) VALUES (?, ?, ?, ?) "
        "ON CONFLICT(telegram_id) DO UPDATE SET fa_username = ?, fa_link = ?",
        (message.from_user.id, message.from_user.username, fa_username, fa_link, fa_username, fa_link)
    )
    conn.commit()
    conn.close()
    
    await state.clear()
    await message.answer(f"‚úÖ –ù–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: **{fa_username}**\n üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç! –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –≤–∑–∞–∏–º–Ω—ã–π—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –ª–∞–π–∫–æ–≤! üîó –í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: [FurAffinity]({fa_link})", parse_mode="Markdown", reply_markup=nav_keyboard)

class ProfileEdit(StatesGroup):
    edit_name = State()
    edit_fa_link = State()

def init_db():
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        telegram_id INTEGER UNIQUE,
        username TEXT,
        fa_username TEXT UNIQUE,
        fa_link TEXT,
        last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
    ''')
    conn.commit()
    conn.close()

@dp.callback_query(F.data == "profile")
@dp.message(Command("profile"))
async def profile(event: types.Message | types.CallbackQuery):
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute("SELECT fa_username, fa_link FROM users WHERE telegram_id = ?", (event.from_user.id,))
    user = cursor.fetchone()
    conn.close()
    
    if user:
        fa_username, fa_link = user
        profile_info = f"ü¶ä–í–∞—à –Ω–∏–∫: **{fa_username}**\nüîó [–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å]({fa_link})"
    else:
        profile_info = "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /start."
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="edit_name")],
    ])
    
    if isinstance(event, types.Message):
        await event.answer(profile_info, reply_markup=keyboard, parse_mode="Markdown")
    elif isinstance(event, types.CallbackQuery):
        await event.message.edit_text(profile_info, reply_markup=keyboard, parse_mode="Markdown")
        await event.answer()

@dp.callback_query(F.data == "edit_name")
async def edit_name(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(ProfileEdit.edit_name)
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫ –Ω–∞ FurAffinity:", reply_markup=nav_keyboard)
    await callback.answer()

@dp.message(ProfileEdit.edit_name)
async def handle_name_input(message: types.Message, state: FSMContext):
    fa_username = message.text.strip()
    fa_link = f"https://www.furaffinity.net/user/{fa_username}"
    
    conn = sqlite3.connect("bot.db")
    cursor = conn.cursor()
    cursor.execute("UPDATE users SET fa_username = ?, fa_link = ? WHERE telegram_id = ?", (fa_username, fa_link, message.from_user.id))
    conn.commit()
    conn.close()
    
    await state.clear()
    await message.answer("‚úÖ –ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", reply_markup=nav_keyboard)
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –∏–º–µ–Ω–∏
    await profile(message)

# –ö–æ–º–∞–Ω–¥–∞ /menu
@dp.message(Command("menu"))
async def menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
@dp.message(F.text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def profile_button(message: types.Message):
    await profile(message)  # –í—ã–∑—ã–≤–∞–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É /profile


async def main():
    init_db()
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())